version: '3.8'

services:
  crypto-monitor:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crypto-monitor
    restart: unless-stopped
    
    # 환경 변수 (실제 값은 .env 파일에서 로드)
    environment:
      - PYTHONUNBUFFERED=1
      - TZ=Asia/Seoul
    
    # 환경 변수 파일 로드
    env_file:
      - .env
    
    # 볼륨 마운트 (로그와 설정 파일 영구 보관)
    volumes:
      - ./logs:/app/logs
      - ./config.py:/app/config.py:ro  # 읽기 전용으로 설정 파일 마운트
      - ./watchlist.py:/app/watchlist.py:ro  # 읽기 전용으로 관심종목 파일 마운트
    
    # 네트워크 설정
    networks:
      - crypto-network
    
    # 로그 설정
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # 헬스체크
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('https://api.binance.com/api/v3/ping', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # 선택사항: 로그 수집을 위한 Prometheus + Grafana
  # (필요시 주석 해제)
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: crypto-prometheus
  #   restart: unless-stopped
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
  #   networks:
  #     - crypto-network

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: crypto-grafana
  #   restart: unless-stopped
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #     - grafana-storage:/var/lib/grafana
  #   networks:
  #     - crypto-network

networks:
  crypto-network:
    driver: bridge

volumes:
  grafana-storage:
